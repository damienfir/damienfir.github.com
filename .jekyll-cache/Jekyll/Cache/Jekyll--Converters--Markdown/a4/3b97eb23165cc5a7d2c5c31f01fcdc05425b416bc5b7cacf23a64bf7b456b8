I"b<p>During my work on the project <a href="http://lcav.epfl.ch/research/eFacsimile">eFacsimile</a>, I ported an implementation of <a href="http://www.robots.ox.ac.uk/~gk/PTAM/">PTAM</a> on Android using the NDK. This page reflects the challenges I encountered while developing native code on Android.</p>

<p>The source code can be explored on <a href="https://github.com/damienfir/android-ptam">github</a>.</p>

<h3 id="opengl">OpenGL</h3>

<p>The user interface of the project relies on OpenGL, which implies that a good knowledge of the graphic stack on Android is essential to be efficient. <a href="https://source.android.com/devices/graphics/architecture.html">This guide</a> on the Android documentation page provides a very extensive overview of the graphics architecture.</p>

<p><a href="https://github.com/google/grafika">Grafika</a> by Google is a great source for code samples and examples for everything relating to graphics development on Android.</p>

<p>Android platforms support only OpenGL ES, which is good to keep in mind while porting pure OpenGL applications. You must provide an interface for the appâ€™s OpenGL call so that they are recognized by the Android platform.</p>

<h3 id="jni">JNI</h3>

<p>JNI is the Java Native Interface, and allows one to write functions in C/C++ that are callable from the JVM using Java code in a Android application.</p>
:ET